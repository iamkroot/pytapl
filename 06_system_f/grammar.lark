start: (command ";")*

?command: term
        | VARNAME ":" type                                   -> bind

?term: "lambda" VARNAME ":" type "." term                    -> abs
     | "let" VARNAME "=" term "in" term                      -> let
     | "if" term "then" term "else" term                     -> if_stmt
     | "lambda" TYPENAME "." term                            -> type_abs
     | "let" "{" TYPENAME "," VARNAME "}" "=" term "in" term -> exis_unpack
     | app_term

?app_term: "succ" aterm                                      -> succ
         | "pred" aterm                                      -> pred
         | "iszero" aterm                                    -> iszero
         | term "[" type "]"                                 -> type_app
         | "{" "*" type "," term "}" "as" type               -> exis_pack
         | aterm
         | app_term aterm                                    -> app

?aterm: "(" term ")"
      | "true"                                               -> true
      | "false"                                              -> false
      | INT                                                  -> nat
      | VARNAME                                              -> var

?type: "All" TYPENAME "." type                               -> univ_ty
     | "{" "Some" TYPENAME "," type "}"                      -> exis_ty
     | atype "->" type                                       -> arr_ty 
     | atype

?atype: "Nat"                                                -> nat_ty
      | "Bool"                                               -> bool_ty
      | TYPENAME                                             -> ty_var
      | "(" type ")"      

TYPENAME: UCASE_LETTER ("_"|LETTER|DIGIT)*
VARNAME: LCASE_LETTER ("_"|LETTER|DIGIT)*

%import common.WS
%import common.C_COMMENT
%import common.CPP_COMMENT
%import common.CNAME
%import common.UCASE_LETTER
%import common.LCASE_LETTER
%import common.DIGIT
%import common.LETTER
%import common.INT
%import common.SH_COMMENT
%ignore WS
%ignore C_COMMENT
%ignore CPP_COMMENT
%ignore SH_COMMENT